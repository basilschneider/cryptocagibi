#!/usr/bin/env bash

# Selection (default: everything)
sel="${1:-$}"

## Get data
#date >> data
#curl \
#    -s \
#    -H "X-CMC_PRO_API_KEY: 048a5c0b-b2e9-42dd-8166-c12b9fe3f72e" \
#    -H "Accept: application/json" \
#    -d "symbol=BTC,ETH,XMR,XRP,DOGE,VET,ICX,ONE" \
#    -G https://pro-api.coinmarketcap.com/v1/cryptocurrency/quotes/latest |
#    egrep -o '"symbol[^,]*|"price[^,]*' >> data
#
#echo >> data

# Parse last two datasets
tail -n 36 data | \
    awk \
        -v sel="${sel}" \
        -v color=yes \
    'BEGIN{

        # Set file delimiter
        FS = ":"

        # Color control characters
        color == "no" ? colorend = "" : colorend = "\033[0m"

        # Colors
        green = "\033[92m"
        orange = "\033[33m"
        yellow = "\033[93m"
        red = "\033[91m"

        # Set reference prices
        price_ref["ETH"] = 1595.88
        price_ref["XMR"] = 163.59
        price_ref["XRP"] = 0.5819
        price_ref["DOGE"] = 0.35711
        price_ref["VET"] = 0.2407
        price_ref["ICX"] = 2.6118
        price_ref["ONE"] = 0.1436
        price_fut["DOGE"] = 0.733103
        price_liq["DOGE"] = 0.693220
    }
    # Find symbol
    /"symbol"/ {
        gsub("\"", "", $2)
        symbol = $2
    }
    # Find last and current price
    /"price"/ {

        # If symbol is not in sel, skip
        if (symbol !~ sel){
            next
        }
        if (symbol in price_lst){
            price_now[symbol] = $2
        }else{
            price_lst[symbol] = $2
        }
    }
    END{
        for (symbol in price_now){

            # Show last and current price
            # Set color, depending on negative-positive
            if (color == "no"){
                colorbegin = ""
            }else{
                if (price_now[symbol] >= price_lst[symbol]){
                    colorbegin = green
                }else{
                    colorbegin = orange
                }
            }
            printf "%6-s ; PRICE: %10.4f ; DIFFtoLAST:%s %10.4f (%7.3f %)%s",
                    symbol,
                    price_now[symbol],
                    colorbegin,
                    price_now[symbol]-price_lst[symbol],
                    100*(price_now[symbol]-price_lst[symbol])/price_lst[symbol],
                    colorend

            # If available, show difference to reference price
            if (symbol in price_ref){
                printf " ; DIFFtoREF: %10.4f (%9.3f %)",
                        price_now[symbol]-price_ref[symbol],
                        100*(price_now[symbol]-price_ref[symbol])/price_ref[symbol]
            }

            # If available, show difference to future buy price
            if (symbol in price_fut){

                # Set color, depending on negative-positive
                if (color == "no"){
                    colorbegin = ""
                }else{
                    if (price_now[symbol] > price_fut[symbol]){
                        colorbegin = green
                    }else{
                        colorbegin = orange
                    }
                }
                printf " ; DIFFtoFUT:%s %10.4f (%9.3f %)%s",
                        colorbegin,
                        price_now[symbol]-price_fut[symbol],
                        100*(price_now[symbol]-price_fut[symbol])/price_fut[symbol],
                        colorend
            }

            # If available, show difference to liquidation price
            if (symbol in price_liq){
                liqdiffp = 100*(price_now[symbol]-price_liq[symbol])/price_liq[symbol]

                # Set color, if getting close to liquidation price
                if (color == "no"){
                    colorbegin = ""
                }else{
                    colorbegin = "\033[0m" # neutral
                    if (liqdiffp < 3){
                        colorbegin = yellow
                    }
                    if (liqdiffp < 2){
                        colorbegin = orange
                    }
                    if (liqdiffp < 1){
                        colorbegin = red
                    }
                }
                printf " ; DIFFtoLIQ:%s %10.4f (%9.3f %)%s",
                        colorbegin,
                        price_now[symbol]-price_liq[symbol],
                        liqdiffp,
                        colorend
            }

            # In any case, end with a new line
            printf "\n"
        }
    }
'
